// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "firstName", type: "text" },
      { name: "lastName", type: "text" },
      { name: "email", type: "text" },
      { name: "bio", type: "text" },
      { name: "age", type: "datetime" },
      {
        name: "joinedAt",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "userId", type: "string", unique: true },
      { name: "userName", type: "string", unique: true },
      { name: "gender", type: "text" },
      { name: "avatar", type: "text" },
    ],
    revLinks: [
      { column: "userId", table: "history" },
      { column: "userId", table: "settings" },
    ],
  },
  {
    name: "history",
    columns: [
      { name: "userId", type: "link", link: { table: "users" } },
      { name: "bookTitle", type: "text" },
      { name: "readAt", type: "datetime", defaultValue: "now" },
      { name: "bookUrl", type: "text" },
      { name: "chapNumber", type: "int" },
      { name: "chapUrl", type: "text" },
      { name: "chapTitle", type: "text" },
    ],
  },
  {
    name: "settings",
    columns: [
      { name: "userId", type: "link", link: { table: "users" } },
      { name: "theme", type: "text" },
      { name: "fontSize", type: "int" },
      { name: "fontStyle", type: "text" },
      { name: "lineHeight", type: "float" },
      { name: "indent", type: "bool" },
      { name: "customFont", type: "text" },
      { name: "makePublic", type: "bool" },
      { name: "upVotes", type: "int" },
      { name: "downVotes", type: "int" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type History = InferredTypes["history"];
export type HistoryRecord = History & XataRecord;

export type Settings = InferredTypes["settings"];
export type SettingsRecord = Settings & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  history: HistoryRecord;
  settings: SettingsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Vidyut-Mahadevan-s-workspace-bav7l7.ap-southeast-2.xata.sh/db/novel-zone-users",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
